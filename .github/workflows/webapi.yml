name: webapi
permissions:
  packages: write
  contents: read
env:
  CHART_NAME: maxiar-dotnetstarterkit-webapi
  IMAGE_TAG: 2.1.0
  CHART_LOCATION: src/api/server/kubernetes/helm
  GCR_REPO: ghcr.io/${{ github.repository_owner }}/dotnetstarterkit

on:
  workflow_dispatch:

  push:
    branches:
      - k8s
    paths:
      - "src/api/**"
      - "src/Directory.Packages.props"

  pull_request:
    branches:
      - k8s
    paths:
      - "src/api/**"
      - "src/Directory.Packages.props"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x
      - name: restore dependencies
        run: dotnet restore ./src/api/server/Server.csproj
      - name: build
        run: dotnet build ./src/api/server/Server.csproj --no-restore
      - name: test
        run: dotnet test ./src/api/server/Server.csproj --no-build --verbosity normal

  publish:
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x
      - name: docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish to github container registry
        working-directory: ./src/api/server/
        run: |
          dotnet publish -c Release -p:ContainerRepository=ghcr.io/${{ github.repository_owner}}/webapi -p:RuntimeIdentifier=linux-x64
          docker push ghcr.io/${{ github.repository_owner}}/webapi --all-tags
          
  publish-helm:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Set Up Helm
        run: |
          curl -sSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Helm Lint
        run: |
          helm lint $CHART_LOCATION

      - name: Helm Login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u $ --password-stdin

      - name: Helm Package
        run: |
          export IMAGE_TAG=$(grep 'version:' $CHART_LOCATION/Chart.yaml | tail -n1 | awk '{ print $2 }')
          helm package $CHART_LOCATION --version $IMAGE_TAG

      - name: Helm Push
        if: ${{ github.event_name == 'push' }}
        run: |
          export IMAGE_TAG=$(grep 'version:' $CHART_LOCATION/Chart.yaml | tail -n1 | awk '{ print $2 }')
          helm push $CHART_NAME-$IMAGE_TAG.tgz oci://$GCR_REPO